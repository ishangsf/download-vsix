// i18n.js - 国际化配置文件
import { ref, watch } from 'vue'
import { createI18n } from 'vue-i18n'

// 创建一个响应式的语言变量，并从localStorage中获取初始值（如果有）
export const currentLang = ref(localStorage.getItem('language') || 'en-US')

// 监听语言变化并保存到localStorage并更新i18n实例的locale
watch(currentLang, (newLang) => {
  localStorage.setItem('language', newLang)
  // 这里不需要手动更新i18n实例，因为我们会在创建时绑定响应式引用
})

// 定义翻译消息
const messages = {
  'en-US': {
    appTitle: 'VSCode Extension Offline Download Tool',
    appSubtitle: 'Download VSCode extensions for offline installation',
    searchPlaceholder: 'Enter extension name or ID',
    searchButton: 'Search',
    description: 'Description',
    version: 'Version',
    lastUpdated: 'Last Updated',
    tags: 'Tags',
    categories: 'Categories',
    selectVersion: 'Select Version',
    downloadButton: 'Download Extension',
    errorNotFound: 'No matching extension found, please check the extension name or ID',
    errorNetwork: 'Search error: No server response, please check your network connection',
    errorGeneric: 'Search error: ',
    errorDownload: 'Download error: ',
    publisher: 'Publisher',
    unknown: 'Unknown',
    backButton: 'Back to Search',
    featuresTitle: 'Features',
    featuresSubtitle: 'Everything you need to download VSCode extensions',
    feature1Title: 'Easy Search',
    feature1Description: 'Search for any VSCode extension by name or ID',
    feature2Title: 'Version Selection',
    feature2Description: 'Choose specific versions of extensions for download',
    feature3Title: 'Fast Download',
    feature3Description: 'Direct download of .vsix files for offline installation',
    feature4Title: 'Extension Details',
    feature4Description: 'View comprehensive information about each extension',
    openSourceTitle: 'Open Source',
    openSourceDescription: 'This project is open source and available on GitHub',
    viewOnGithub: 'View on GitHub',
    footerText: 'Generated by Trae based on Claude-3.7-Sonnet &',
    stable: 'Stable Version',
    prerelease: 'Pre-release Version',
    searchSuccess: 'Found extension: {name}',
    downloadSuccess: 'Successfully downloaded: {name}'
  },
  'zh-CN': {
    appTitle: 'VSCode插件离线下载工具',
    appSubtitle: '下载VSCode插件用于离线安装',
    searchPlaceholder: '请输入插件名称或ID',
    searchButton: '搜索',
    description: '描述',
    version: '版本',
    lastUpdated: '最后更新',
    tags: '标签',
    categories: '分类',
    selectVersion: '选择版本',
    downloadButton: '下载插件',
    errorNotFound: '未找到匹配的插件，请检查插件名称或ID是否正确',
    errorNetwork: '搜索插件时出错: 未收到服务器响应，请检查网络连接',
    errorGeneric: '搜索插件时出错: ',
    errorDownload: '下载插件时出错: ',
    publisher: '发布者',
    unknown: '未知',
    backButton: '返回搜索',
    featuresTitle: '功能特点',
    featuresSubtitle: '下载VSCode插件所需的一切',
    feature1Title: '便捷搜索',
    feature1Description: '通过名称或ID搜索任何VSCode插件',
    feature2Title: '版本选择',
    feature2Description: '选择特定版本的插件进行下载',
    feature3Title: '快速下载',
    feature3Description: '直接下载.vsix文件用于离线安装',
    feature4Title: '插件详情',
    feature4Description: '查看每个插件的详细信息',
    openSourceTitle: '开源项目',
    openSourceDescription: '本项目是开源的，可在GitHub上找到',
    viewOnGithub: '在GitHub上查看',
    footerText: '由 Trae 基于 Claude-3.7-Sonnet 生成 &',
    stable: '稳定版本',
    prerelease: '预发布版本',
    searchSuccess: '已找到插件: {name}',
    downloadSuccess: '成功下载插件: {name}'
  },
  'ja-JP': {
    appTitle: 'VSCode拡張機能オフラインダウンロードツール',
    appSubtitle: 'オフラインインストール用のVSCode拡張機能をダウンロード',
    searchPlaceholder: '拡張機能名またはIDを入力',
    searchButton: '検索',
    description: '説明',
    version: 'バージョン',
    lastUpdated: '最終更新日',
    tags: 'タグ',
    categories: 'カテゴリー',
    selectVersion: 'バージョンを選択',
    downloadButton: '拡張機能をダウンロード',
    errorNotFound: '該当する拡張機能が見つかりません。拡張機能名またはIDを確認してください',
    errorNetwork: '検索エラー：サーバーからの応答がありません。ネットワーク接続を確認してください',
    errorGeneric: '検索エラー: ',
    errorDownload: 'ダウンロードエラー: ',
    publisher: '発行者',
    unknown: '不明',
    backButton: '検索に戻る',
    featuresTitle: '機能',
    featuresSubtitle: 'VSCode拡張機能をダウンロードするために必要なすべてのもの',
    feature1Title: '簡単検索',
    feature1Description: '名前またはIDで任意のVSCode拡張機能を検索',
    feature2Title: 'バージョン選択',
    feature2Description: 'ダウンロードする拡張機能の特定バージョンを選択',
    feature3Title: '高速ダウンロード',
    feature3Description: 'オフラインインストール用の.vsixファイルを直接ダウンロード',
    feature4Title: '拡張機能の詳細',
    feature4Description: '各拡張機能の包括的な情報を表示',
    openSourceTitle: 'オープンソース',
    openSourceDescription: 'このプロジェクトはオープンソースでGitHubで利用可能です',
    viewOnGithub: 'GitHubで見る',
    footerText: 'Traeによって Claude-3.7-Sonnet をベースに生成 &',
    stable: '安定版',
    prerelease: 'プレリリース版',
    searchSuccess: '拡張機能が見つかりました: {name}',
    downloadSuccess: 'ダウンロードが完了しました: {name}'
  },
  'ko-KR': {
    appTitle: 'VSCode 확장 프로그램 오프라인 다운로드 도구',
    appSubtitle: '오프라인 설치를 위한 VSCode 확장 프로그램 다운로드',
    searchPlaceholder: '확장 프로그램 이름 또는 ID 입력',
    searchButton: '검색',
    description: '설명',
    version: '버전',
    lastUpdated: '마지막 업데이트',
    tags: '태그',
    categories: '카테고리',
    selectVersion: '버전 선택',
    downloadButton: '확장 프로그램 다운로드',
    errorNotFound: '일치하는 확장 프로그램을 찾을 수 없습니다. 확장 프로그램 이름 또는 ID를 확인하세요',
    errorNetwork: '검색 오류: 서버 응답이 없습니다. 네트워크 연결을 확인하세요',
    errorGeneric: '검색 오류: ',
    errorDownload: '다운로드 오류: ',
    publisher: '게시자',
    unknown: '알 수 없음',
    backButton: '검색으로 돌아가기',
    featuresTitle: '기능',
    featuresSubtitle: 'VSCode 확장 프로그램 다운로드에 필요한 모든 것',
    feature1Title: '쉬운 검색',
    feature1Description: '이름 또는 ID로 VSCode 확장 프로그램 검색',
    feature2Title: '버전 선택',
    feature2Description: '다운로드할 특정 버전의 확장 프로그램 선택',
    feature3Title: '빠른 다운로드',
    feature3Description: '오프라인 설치를 위한 .vsix 파일 직접 다운로드',
    feature4Title: '확장 프로그램 세부 정보',
    feature4Description: '각 확장 프로그램에 대한 포괄적인 정보 확인',
    openSourceTitle: '오픈 소스',
    openSourceDescription: '이 프로젝트는 오픈 소스이며 GitHub에서 사용 가능합니다',
    viewOnGithub: 'GitHub에서 보기',
    footerText: 'Trae가 Claude-3.7-Sonnet을 기반으로 생성 &',
    stable: '안정 버전',
    prerelease: '사전 출시 버전',
    searchSuccess: '확장 프로그램을 찾았습니다: {name}',
    downloadSuccess: '다운로드 완료: {name}'
  }
}

// 创建i18n实例
const i18n = createI18n({
  legacy: false, // 使用组合式API
  locale: currentLang.value, // 初始值
  fallbackLocale: 'en-US',
  messages
})

// 确保i18n实例的locale属性跟随currentLang变化
watch(currentLang, (newLang) => {
  i18n.global.locale.value = newLang
})

export default i18n